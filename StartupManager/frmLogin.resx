<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jt2B6iEAAAAASUVORK5CYII=
</value>
  </data>
</root>