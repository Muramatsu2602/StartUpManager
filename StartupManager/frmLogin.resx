<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>