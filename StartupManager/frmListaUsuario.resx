<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProjeto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>