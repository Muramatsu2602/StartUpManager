<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>